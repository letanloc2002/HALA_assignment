
ENTRANCE_TEST_HALA.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000029c  080001c4  080001c4  000011c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000460  08000468  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000460  08000460  00001468  2**0
                  CONTENTS
  4 .ARM          00000000  08000460  08000460  00001468  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000460  08000468  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000460  08000460  00001460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000464  08000464  00001464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001468  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000000  08000468  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000020  08000468  00002020  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00001468  2**0
                  CONTENTS, READONLY
 12 .debug_info   000001b0  00000000  00000000  00001498  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000109  00000000  00000000  00001648  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000088  00000000  00000000  00001758  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 0000005c  00000000  00000000  000017e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00000fd1  00000000  00000000  0000183c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000005d8  00000000  00000000  0000280d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00003f0c  00000000  00000000  00002de5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00006cf1  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000168  00000000  00000000  00006d34  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  00006e9c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	@ (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	@ (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000448 	.word	0x08000448

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	@ (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	@ (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	@ (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000448 	.word	0x08000448

08000204 <HSI_Init>:
#define TIM2_EGR		(*(volatile uint32_t*)0x40000014)
#define NVIC_ISER0		(*(volatile uint32_t*)0xE000E100)


void HSI_Init(void)
{
 8000204:	b480      	push	{r7}
 8000206:	af00      	add	r7, sp, #0
	RCC_CR |= (1<<0);
 8000208:	4b08      	ldr	r3, [pc, #32]	@ (800022c <HSI_Init+0x28>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	4a07      	ldr	r2, [pc, #28]	@ (800022c <HSI_Init+0x28>)
 800020e:	f043 0301 	orr.w	r3, r3, #1
 8000212:	6013      	str	r3, [r2, #0]
	RCC_CFGR &= ~(0x3<<21);
 8000214:	4b06      	ldr	r3, [pc, #24]	@ (8000230 <HSI_Init+0x2c>)
 8000216:	681b      	ldr	r3, [r3, #0]
 8000218:	4a05      	ldr	r2, [pc, #20]	@ (8000230 <HSI_Init+0x2c>)
 800021a:	f423 03c0 	bic.w	r3, r3, #6291456	@ 0x600000
 800021e:	6013      	str	r3, [r2, #0]
}
 8000220:	bf00      	nop
 8000222:	46bd      	mov	sp, r7
 8000224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000228:	4770      	bx	lr
 800022a:	bf00      	nop
 800022c:	40023800 	.word	0x40023800
 8000230:	40023808 	.word	0x40023808

08000234 <Timer2_Init>:
void Timer2_Init(uint16_t prescaler, uint16_t period)
{
 8000234:	b480      	push	{r7}
 8000236:	b083      	sub	sp, #12
 8000238:	af00      	add	r7, sp, #0
 800023a:	4603      	mov	r3, r0
 800023c:	460a      	mov	r2, r1
 800023e:	80fb      	strh	r3, [r7, #6]
 8000240:	4613      	mov	r3, r2
 8000242:	80bb      	strh	r3, [r7, #4]
	RCC_APB1ENR |= (1<<0);
 8000244:	4b13      	ldr	r3, [pc, #76]	@ (8000294 <Timer2_Init+0x60>)
 8000246:	681b      	ldr	r3, [r3, #0]
 8000248:	4a12      	ldr	r2, [pc, #72]	@ (8000294 <Timer2_Init+0x60>)
 800024a:	f043 0301 	orr.w	r3, r3, #1
 800024e:	6013      	str	r3, [r2, #0]
	TIM2_PSC = prescaler - 1;      // Set prescaler
 8000250:	88fb      	ldrh	r3, [r7, #6]
 8000252:	1e5a      	subs	r2, r3, #1
 8000254:	4b10      	ldr	r3, [pc, #64]	@ (8000298 <Timer2_Init+0x64>)
 8000256:	601a      	str	r2, [r3, #0]
	TIM2_ARR = period - 1;         // Set auto-reload value
 8000258:	88bb      	ldrh	r3, [r7, #4]
 800025a:	1e5a      	subs	r2, r3, #1
 800025c:	4b0f      	ldr	r3, [pc, #60]	@ (800029c <Timer2_Init+0x68>)
 800025e:	601a      	str	r2, [r3, #0]
	TIM2_CR1 	|= (1 << 0);          // Enable Timer
 8000260:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8000264:	681b      	ldr	r3, [r3, #0]
 8000266:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 800026a:	f043 0301 	orr.w	r3, r3, #1
 800026e:	6013      	str	r3, [r2, #0]
	//TIM2_EGR	 |= (1<<0);
	TIM2_DIER	 |= (1 << 0);         // Enable update interrupt (UIE)
 8000270:	4b0b      	ldr	r3, [pc, #44]	@ (80002a0 <Timer2_Init+0x6c>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4a0a      	ldr	r2, [pc, #40]	@ (80002a0 <Timer2_Init+0x6c>)
 8000276:	f043 0301 	orr.w	r3, r3, #1
 800027a:	6013      	str	r3, [r2, #0]
	NVIC_ISER0	|= (1 << 28);       // Enable interrupt in NVIC for Timer2
 800027c:	4b09      	ldr	r3, [pc, #36]	@ (80002a4 <Timer2_Init+0x70>)
 800027e:	681b      	ldr	r3, [r3, #0]
 8000280:	4a08      	ldr	r2, [pc, #32]	@ (80002a4 <Timer2_Init+0x70>)
 8000282:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000286:	6013      	str	r3, [r2, #0]
}
 8000288:	bf00      	nop
 800028a:	370c      	adds	r7, #12
 800028c:	46bd      	mov	sp, r7
 800028e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000292:	4770      	bx	lr
 8000294:	40023840 	.word	0x40023840
 8000298:	40000028 	.word	0x40000028
 800029c:	4000002c 	.word	0x4000002c
 80002a0:	4000000c 	.word	0x4000000c
 80002a4:	e000e100 	.word	0xe000e100

080002a8 <Delay_ms>:
void Timer2_Stop() {
    TIM2_CR1 &= ~(1 << 0);         // Disable Timer2
}
volatile uint32_t timerDelayCounter = 0;

void Delay_ms(uint32_t ms) {
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
    timerDelayCounter = ms;
 80002b0:	4a07      	ldr	r2, [pc, #28]	@ (80002d0 <Delay_ms+0x28>)
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	6013      	str	r3, [r2, #0]
    while (timerDelayCounter > 0);
 80002b6:	bf00      	nop
 80002b8:	4b05      	ldr	r3, [pc, #20]	@ (80002d0 <Delay_ms+0x28>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d1fb      	bne.n	80002b8 <Delay_ms+0x10>
}
 80002c0:	bf00      	nop
 80002c2:	bf00      	nop
 80002c4:	370c      	adds	r7, #12
 80002c6:	46bd      	mov	sp, r7
 80002c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002cc:	4770      	bx	lr
 80002ce:	bf00      	nop
 80002d0:	2000001c 	.word	0x2000001c

080002d4 <TIM2_IRQHandler>:

// ISR for Timer2 (in startup file)
void TIM2_IRQHandler(void)
{
 80002d4:	b480      	push	{r7}
 80002d6:	af00      	add	r7, sp, #0
    if (TIM2_SR & (1 << 0))
 80002d8:	4b0c      	ldr	r3, [pc, #48]	@ (800030c <TIM2_IRQHandler+0x38>)
 80002da:	681b      	ldr	r3, [r3, #0]
 80002dc:	f003 0301 	and.w	r3, r3, #1
 80002e0:	2b00      	cmp	r3, #0
 80002e2:	d00e      	beq.n	8000302 <TIM2_IRQHandler+0x2e>
    {
    	// Check update interrupt flag
        TIM2_SR &= ~(1 << 0);      // Clear interrupt flag
 80002e4:	4b09      	ldr	r3, [pc, #36]	@ (800030c <TIM2_IRQHandler+0x38>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4a08      	ldr	r2, [pc, #32]	@ (800030c <TIM2_IRQHandler+0x38>)
 80002ea:	f023 0301 	bic.w	r3, r3, #1
 80002ee:	6013      	str	r3, [r2, #0]
        if (timerDelayCounter > 0)
 80002f0:	4b07      	ldr	r3, [pc, #28]	@ (8000310 <TIM2_IRQHandler+0x3c>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	2b00      	cmp	r3, #0
 80002f6:	d004      	beq.n	8000302 <TIM2_IRQHandler+0x2e>
        {
            timerDelayCounter--;
 80002f8:	4b05      	ldr	r3, [pc, #20]	@ (8000310 <TIM2_IRQHandler+0x3c>)
 80002fa:	681b      	ldr	r3, [r3, #0]
 80002fc:	3b01      	subs	r3, #1
 80002fe:	4a04      	ldr	r2, [pc, #16]	@ (8000310 <TIM2_IRQHandler+0x3c>)
 8000300:	6013      	str	r3, [r2, #0]
        }
    }
}
 8000302:	bf00      	nop
 8000304:	46bd      	mov	sp, r7
 8000306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800030a:	4770      	bx	lr
 800030c:	40000010 	.word	0x40000010
 8000310:	2000001c 	.word	0x2000001c

08000314 <GPIOA_Pin5_Init>:
void GPIOA_Pin5_Init(void)
{
 8000314:	b480      	push	{r7}
 8000316:	af00      	add	r7, sp, #0
	RCC_AHB1ENR |= (1<<0);
 8000318:	4b0e      	ldr	r3, [pc, #56]	@ (8000354 <GPIOA_Pin5_Init+0x40>)
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	4a0d      	ldr	r2, [pc, #52]	@ (8000354 <GPIOA_Pin5_Init+0x40>)
 800031e:	f043 0301 	orr.w	r3, r3, #1
 8000322:	6013      	str	r3, [r2, #0]
	GPIOA_MODER |= (1<<10);
 8000324:	4b0c      	ldr	r3, [pc, #48]	@ (8000358 <GPIOA_Pin5_Init+0x44>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	4a0b      	ldr	r2, [pc, #44]	@ (8000358 <GPIOA_Pin5_Init+0x44>)
 800032a:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800032e:	6013      	str	r3, [r2, #0]
	GPIOA_OTYPER &= ~(1<<5);
 8000330:	4b0a      	ldr	r3, [pc, #40]	@ (800035c <GPIOA_Pin5_Init+0x48>)
 8000332:	681b      	ldr	r3, [r3, #0]
 8000334:	4a09      	ldr	r2, [pc, #36]	@ (800035c <GPIOA_Pin5_Init+0x48>)
 8000336:	f023 0320 	bic.w	r3, r3, #32
 800033a:	6013      	str	r3, [r2, #0]
	GPIOA_ODR 	&=	~(1<<5);
 800033c:	4b08      	ldr	r3, [pc, #32]	@ (8000360 <GPIOA_Pin5_Init+0x4c>)
 800033e:	681b      	ldr	r3, [r3, #0]
 8000340:	4a07      	ldr	r2, [pc, #28]	@ (8000360 <GPIOA_Pin5_Init+0x4c>)
 8000342:	f023 0320 	bic.w	r3, r3, #32
 8000346:	6013      	str	r3, [r2, #0]
}
 8000348:	bf00      	nop
 800034a:	46bd      	mov	sp, r7
 800034c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000350:	4770      	bx	lr
 8000352:	bf00      	nop
 8000354:	40023830 	.word	0x40023830
 8000358:	40020000 	.word	0x40020000
 800035c:	40020004 	.word	0x40020004
 8000360:	40020014 	.word	0x40020014

08000364 <GPIOA_Pin5_Toggle>:

void GPIOA_Pin5_Toggle(void)
{
 8000364:	b480      	push	{r7}
 8000366:	af00      	add	r7, sp, #0
	GPIOA_ODR ^= (1<<5);
 8000368:	4b05      	ldr	r3, [pc, #20]	@ (8000380 <GPIOA_Pin5_Toggle+0x1c>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	4a04      	ldr	r2, [pc, #16]	@ (8000380 <GPIOA_Pin5_Toggle+0x1c>)
 800036e:	f083 0320 	eor.w	r3, r3, #32
 8000372:	6013      	str	r3, [r2, #0]
}
 8000374:	bf00      	nop
 8000376:	46bd      	mov	sp, r7
 8000378:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037c:	4770      	bx	lr
 800037e:	bf00      	nop
 8000380:	40020014 	.word	0x40020014

08000384 <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	af00      	add	r7, sp, #0
	HSI_Init();
 8000388:	f7ff ff3c 	bl	8000204 <HSI_Init>
	GPIOA_Pin5_Init();
 800038c:	f7ff ffc2 	bl	8000314 <GPIOA_Pin5_Init>
	Timer2_Init(16, 1000);//16MHz, 1000 period
 8000390:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8000394:	2010      	movs	r0, #16
 8000396:	f7ff ff4d 	bl	8000234 <Timer2_Init>
	//Timer2_Start();
    /* Loop forever */
	while(1)
	{
		GPIOA_Pin5_Toggle();
 800039a:	f7ff ffe3 	bl	8000364 <GPIOA_Pin5_Toggle>
		Delay_ms(1000);
 800039e:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80003a2:	f7ff ff81 	bl	80002a8 <Delay_ms>
		GPIOA_Pin5_Toggle();
 80003a6:	bf00      	nop
 80003a8:	e7f7      	b.n	800039a <main+0x16>
	...

080003ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003ac:	480d      	ldr	r0, [pc, #52]	@ (80003e4 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003b0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003b4:	480c      	ldr	r0, [pc, #48]	@ (80003e8 <LoopForever+0x6>)
  ldr r1, =_edata
 80003b6:	490d      	ldr	r1, [pc, #52]	@ (80003ec <LoopForever+0xa>)
  ldr r2, =_sidata
 80003b8:	4a0d      	ldr	r2, [pc, #52]	@ (80003f0 <LoopForever+0xe>)
  movs r3, #0
 80003ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003bc:	e002      	b.n	80003c4 <LoopCopyDataInit>

080003be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003c2:	3304      	adds	r3, #4

080003c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003c8:	d3f9      	bcc.n	80003be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003ca:	4a0a      	ldr	r2, [pc, #40]	@ (80003f4 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003cc:	4c0a      	ldr	r4, [pc, #40]	@ (80003f8 <LoopForever+0x16>)
  movs r3, #0
 80003ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003d0:	e001      	b.n	80003d6 <LoopFillZerobss>

080003d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003d4:	3204      	adds	r2, #4

080003d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003d8:	d3fb      	bcc.n	80003d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003da:	f000 f811 	bl	8000400 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003de:	f7ff ffd1 	bl	8000384 <main>

080003e2 <LoopForever>:

LoopForever:
  b LoopForever
 80003e2:	e7fe      	b.n	80003e2 <LoopForever>
  ldr   r0, =_estack
 80003e4:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003e8:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003ec:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003f0:	08000468 	.word	0x08000468
  ldr r2, =_sbss
 80003f4:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003f8:	20000020 	.word	0x20000020

080003fc <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003fc:	e7fe      	b.n	80003fc <ADC_IRQHandler>
	...

08000400 <__libc_init_array>:
 8000400:	b570      	push	{r4, r5, r6, lr}
 8000402:	4d0d      	ldr	r5, [pc, #52]	@ (8000438 <__libc_init_array+0x38>)
 8000404:	4c0d      	ldr	r4, [pc, #52]	@ (800043c <__libc_init_array+0x3c>)
 8000406:	1b64      	subs	r4, r4, r5
 8000408:	10a4      	asrs	r4, r4, #2
 800040a:	2600      	movs	r6, #0
 800040c:	42a6      	cmp	r6, r4
 800040e:	d109      	bne.n	8000424 <__libc_init_array+0x24>
 8000410:	4d0b      	ldr	r5, [pc, #44]	@ (8000440 <__libc_init_array+0x40>)
 8000412:	4c0c      	ldr	r4, [pc, #48]	@ (8000444 <__libc_init_array+0x44>)
 8000414:	f000 f818 	bl	8000448 <_init>
 8000418:	1b64      	subs	r4, r4, r5
 800041a:	10a4      	asrs	r4, r4, #2
 800041c:	2600      	movs	r6, #0
 800041e:	42a6      	cmp	r6, r4
 8000420:	d105      	bne.n	800042e <__libc_init_array+0x2e>
 8000422:	bd70      	pop	{r4, r5, r6, pc}
 8000424:	f855 3b04 	ldr.w	r3, [r5], #4
 8000428:	4798      	blx	r3
 800042a:	3601      	adds	r6, #1
 800042c:	e7ee      	b.n	800040c <__libc_init_array+0xc>
 800042e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000432:	4798      	blx	r3
 8000434:	3601      	adds	r6, #1
 8000436:	e7f2      	b.n	800041e <__libc_init_array+0x1e>
 8000438:	08000460 	.word	0x08000460
 800043c:	08000460 	.word	0x08000460
 8000440:	08000460 	.word	0x08000460
 8000444:	08000464 	.word	0x08000464

08000448 <_init>:
 8000448:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800044a:	bf00      	nop
 800044c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800044e:	bc08      	pop	{r3}
 8000450:	469e      	mov	lr, r3
 8000452:	4770      	bx	lr

08000454 <_fini>:
 8000454:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000456:	bf00      	nop
 8000458:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800045a:	bc08      	pop	{r3}
 800045c:	469e      	mov	lr, r3
 800045e:	4770      	bx	lr
